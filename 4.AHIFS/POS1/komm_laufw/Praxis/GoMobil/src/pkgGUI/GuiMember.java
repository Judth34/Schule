/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkgGUI;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import pkgData.Database;
import pkgData.Driver;
import pkgData.TableModelDriver;
import pkgMisc.EventCellException;

/**
 *
 * @author savan_000
 */
public class GuiMember extends javax.swing.JFrame implements ListSelectionListener, TableModelDriver.OnExceptionInTableModelListener {

    /**
     * Creates new form GuiMember
     */
    
    
    
    public GuiMember() {
       
        initComponents();
        tmDriver.addOnExceptionInTableModelListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMessage = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDriver = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemLoad = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenuItemLoadXML = new javax.swing.JMenuItem();
        jMenuItemSaveXML = new javax.swing.JMenuItem();
        jMenuDriver = new javax.swing.JMenu();
        jMenuItemAddDriver = new javax.swing.JMenuItem();
        jMenuItemDeleteDriver = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMessage.setBackground(new java.awt.Color(255, 102, 0));
        lblMessage.setColumns(20);
        lblMessage.setRows(5);

        jTableDriver.setModel(tmDriver);
        //jTableDriver.getSelectionModel().addListSelectionListener(this);
        jScrollPane1.setViewportView(jTableDriver);

        jMenuFile.setText("File");

        jMenuItemLoad.setText("Load");
        jMenuItemLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuFile.add(jMenuItemLoad);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuFile.add(jMenuItemSave);

        jMenuItemLoadXML.setText("LoadXML");
        jMenuItemLoadXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuFile.add(jMenuItemLoadXML);

        jMenuItemSaveXML.setText("SaveXML");
        jMenuItemSaveXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuFile.add(jMenuItemSaveXML);

        jMenuBar1.add(jMenuFile);

        jMenuDriver.setText("Driver");

        jMenuItemAddDriver.setText("Add Driver");
        jMenuItemAddDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuDriver.add(jMenuItemAddDriver);

        jMenuItemDeleteDriver.setText("Delete Driver");
        jMenuItemDeleteDriver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onMenuSelection(evt);
            }
        });
        jMenuDriver.add(jMenuItemDeleteDriver);

        jMenuBar1.add(jMenuDriver);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onMenuSelection(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onMenuSelection
        try {
            if(evt.getSource()==this.jMenuItemAddDriver){
		tmDriver.addDriver(new Driver("drivername","1111-11-11","1111-11-11","3333-11-14"));
                tmDriver.addDriver(new Driver("aaa","1111-11-11","1111-11-11","3333-11-14"));            
		tmDriver.addDriver(new Driver("ssss","1111-11-11","1111-11-11","3333-11-14"));            
		tmDriver.addDriver(new Driver("zzz","1111-11-11","1111-11-11","3333-11-14"));            

            }else if(evt.getSource()==this.jMenuItemDeleteDriver){
		
            }else if(evt.getSource()==this.jMenuItemLoad){
		lblMessage.setText("nigga");
            }else if(evt.getSource()==this.jMenuItemSave){
		saveDataToBin();
            }else if(evt.getSource()==this.jMenuItemLoadXML){
		loadBinaryData();
            }else if(evt.getSource()==this.jMenuItemSaveXML){
		lblMessage.setText("nigga");
            }	
	} catch (Exception e1) {
            lblMessage.setText("error: " + e1.getMessage());
	}
    }//GEN-LAST:event_onMenuSelection


    private void saveDataToBin() throws Exception{
        JFileChooser chooser = new JFileChooser();
	FileNameExtensionFilter filter = new FileNameExtensionFilter("bin files (*.bin)", "bin");
	chooser.setFileFilter(filter);
	int rueckgabeWert = chooser.showSaveDialog(null);
	File file = chooser.getSelectedFile();
	if (rueckgabeWert == JFileChooser.APPROVE_OPTION) {	
		db.saveDB(file.getAbsolutePath());
		lblMessage.setText("file selected: " + file.getAbsolutePath() + " and article XML stuff saved");
	}
	else{
		throw new Exception("pls choose file");					
	}
    }
    
    private void loadBinaryData() throws Exception{
            
	JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("binary files (*.bin)", "bin");
	chooser.setFileFilter(filter);
	int rueckgabeWert = chooser.showOpenDialog(null);
	File file = chooser.getSelectedFile();
	if (rueckgabeWert == JFileChooser.APPROVE_OPTION) {	
		db.loadDB(file.getAbsolutePath());	
		lblMessage.setText("file selected: " + file.getAbsolutePath() + " and stuff loaded");
	}
	else{
		throw new Exception("pls choose file");					
    }
		
	}
                
    Database db=null;
    TableModelDriver tmDriver=new TableModelDriver();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuDriver;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemAddDriver;
    private javax.swing.JMenuItem jMenuItemDeleteDriver;
    private javax.swing.JMenuItem jMenuItemLoad;
    private javax.swing.JMenuItem jMenuItemLoadXML;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSaveXML;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDriver;
    private javax.swing.JTextArea lblMessage;
    // End of variables declaration//GEN-END:variables


    

    @Override
    public void valueChanged(ListSelectionEvent lse) {
        int row = jTableDriver.getSelectedRow();
	try{
            lblMessage.setText("selected: " + tmDriver.getDriverAtRow(row));
	}
	catch(Exception el){
        lblMessage.setText("error when selecting car: " + el.getMessage());
	}
    }

    
    @Override
    public void handleTableModelException(EventCellException event) {
        tmDriver.fireTableDataChanged();
        lblMessage.setText(event.getMessage()); 
    }
}
